apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSdk
    defaultConfig {
        applicationId "io.wax911.sample"
        minSdkVersion rootProject.minSdk
        targetSdkVersion rootProject.targetSdk
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(":support")

    implementation "com.google.android.material:material:${rootProject.material}"

    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:${rootProject.kotlin}"
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.constraint}"

    /** Architecture Components */
    implementation "android.arch.work:work-runtime:${rootProject.worker}"
    implementation "androidx.paging:paging-runtime:${rootProject.anroidx}"
    implementation "androidx.lifecycle:lifecycle-extensions:${rootProject.anroidx}"
    implementation "androidx.room:room-runtime:${rootProject.anroidx}"
    kapt "androidx.room:room-compiler:${rootProject.anroidx}"

    /** Fire-base Libraries */
    implementation "com.google.firebase:firebase-core:${rootProject.firebase}"

    /** Crash Analytics */
    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }

    /** Retrofit Libraries */
    implementation "com.squareup.retrofit2:retrofit:${rootProject.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.retrofit}"
    implementation "com.squareup.okhttp3:logging-interceptor:3.9.1"

    /** Glide Libraries */
    implementation "com.github.bumptech.glide:glide:${rootProject.glide}"
    kapt "com.github.bumptech.glide:compiler:${rootProject.glide}"

    /** Java Streams Port */
    implementation 'com.annimon:stream:1.1.9'

    /** Event Bus Library */
    implementation 'org.greenrobot:eventbus:3.1.1'
    
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
}
